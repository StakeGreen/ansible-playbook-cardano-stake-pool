---
- name: add grafana gpg key
  shell: curl https://packages.grafana.com/gpg.key | sudo apt-key add -
  tags: monitoring

- name: add grafana repo
  apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present
    filename: grafana
  tags: monitoring

- name: Install grafana
  apt:
      name: grafana
      state: present
      update_cache: yes
  tags: monitoring

- name: Install certbot
  apt:
      name: certbot
      state: present
      update_cache: yes
  tags: monitoring

- name: Check fullchain.pem exists
  stat:
    path: "/etc/grafana/fullchain.pem"
  register: fullchain_pem_file_check
  tags:
    - monitoring

- name: Set ufw allow ports 80 and 443 for generating certificate
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'allow', port: '80', proto: 'tcp' }
    - { rule: 'allow', port: '443', proto: 'tcp' }
  when: not fullchain_pem_file_check.stat.exists
  notify:
    - restart ufw
  tags:
    - monitoring

- name: Create certificate {{ monitoring_vhost }}
  shell: certbot certonly -d {{ monitoring_vhost }} --standalone -m {{ administration_email }} --agree-tos -n
  when: not fullchain_pem_file_check.stat.exists
  tags: monitoring

- name: Stop grafana-server
  ansible.builtin.service:
    name: grafana-server
    state: stopped
  tags: monitoring

- name: Update certificate {{ monitoring_vhost }}. Trigger certbot renew (when validity of certificate is good this doesn't do anything
  shell: certbot renew
  tags:
    - monitoring

- name: Copy certbot file to grafana directory
  shell: cp /etc/letsencrypt/live/{{ monitoring_vhost }}/*.pem /etc/grafana/
  when: not fullchain_pem_file_check.stat.exists
  tags:
    - monitoring

- name: Set ufw deny ports 80 and 443 for generating certificate
  ufw: rule={{ item.rule }} port={{ item.port }} proto={{ item.proto }}
  with_items:
    - { rule: 'deny', port: '80', proto: 'tcp' }
    - { rule: 'deny', port: '443', proto: 'tcp' }
  when: not fullchain_pem_file_check.stat.exists
  notify:
    - restart ufw
  tags:
    - monitoring

- name: Change full chain.pem cert file permissions
  file: path="/etc/grafana/fullchain.pem"
    owner=root
    group=grafana
    mode=0640
  tags:
    - monitoring

- name: Change full privkey.pem cert file permissions
  file: path="/etc/grafana/privkey.pem"
    owner=root
    group=grafana
    mode=0640
  tags:
    - monitoring

- name: Set https for grafana
  lineinfile:
    dest: /etc/grafana/grafana.ini
    regexp: "^#?;protocol = http"
    line: "protocol = https"
    state: present
  tags:
    - monitoring

- name: Set cert file for grafana
  lineinfile:
    dest: /etc/grafana/grafana.ini
    regexp: "^#?;cert_file ="
    line: "cert_file = /etc/grafana/fullchain.pem"
    state: present
  tags:
    - monitoring

- name: Set cert key for grafana
  lineinfile:
    dest: /etc/grafana/grafana.ini
    regexp: "^#?;cert_key ="
    line: "cert_key = /etc/grafana/privkey.pem"
    state: present
  tags:
    - monitoring

- name: "Configure prometheus node exporter | Enable grafana service"
  systemd: state=started name=grafana-server.service daemon_reload=yes
  tags: monitoring

- name: "Configure grafana | Ensure grafana service does start and bootstrap"
  systemd:
      name: grafana-server.service
      state: started
      enabled: yes
  tags: monitoring

- name: add grafana clock panel plugin
  shell: grafana-cli plugins install grafana-clock-panel
  tags: monitoring
  become: true
